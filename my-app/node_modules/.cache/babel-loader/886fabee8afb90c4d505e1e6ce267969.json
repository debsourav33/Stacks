{"ast":null,"code":"export default class AuthenticationService {\n  static getBasicAuthenticationToken(username, password) {\n    return \"Basic \" + window.btoa(username + ':' + password);\n  }\n\n  static registerSuccesfulLogin(userName, passWord) {\n    sessionStorage.setItem(AuthenticationService.userLabel, userName);\n    sessionStorage.setItem(AuthenticationService.authHeaderLabel, AuthenticationService.getBasicAuthenticationToken(userName, passWord));\n  }\n\n  static unregisterLogin() {\n    sessionStorage.removeItem(AuthenticationService.userLabel);\n  }\n\n  static isLoggedIn() {\n    let loggedInUser = sessionStorage.getItem(AuthenticationService.userLabel);\n    if (loggedInUser == null) return false;\n    return true;\n  }\n\n  static getLoggedInUserName() {\n    let loggedInUser = sessionStorage.getItem(AuthenticationService.userLabel);\n    return loggedInUser;\n  }\n\n  static getRegisteredBasicAuthenticationToken() {\n    let token = sessionStorage.getItem(AuthenticationService.authHeaderLabel);\n    return token;\n  }\n\n}\nAuthenticationService.userLabel = 'authenticatedUser';\nAuthenticationService.authHeaderLabel = 'authenticationHeader';","map":{"version":3,"sources":["C:/Users/sourav.deb/Stacks/my-app/src/components/shared/AuthenticationService.js"],"names":["AuthenticationService","getBasicAuthenticationToken","username","password","window","btoa","registerSuccesfulLogin","userName","passWord","sessionStorage","setItem","userLabel","authHeaderLabel","unregisterLogin","removeItem","isLoggedIn","loggedInUser","getItem","getLoggedInUserName","getRegisteredBasicAuthenticationToken","token"],"mappings":"AAAA,eAAe,MAAMA,qBAAN,CAA2B;AAIJ,SAA3BC,2BAA2B,CAACC,QAAD,EAAWC,QAAX,EAAoB;AAClD,WAAO,WAAWC,MAAM,CAACC,IAAP,CAAYH,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAlB;AACH;;AAE4B,SAAtBG,sBAAsB,CAACC,QAAD,EAAUC,QAAV,EAAmB;AAC5CC,IAAAA,cAAc,CAACC,OAAf,CAAuBV,qBAAqB,CAACW,SAA7C,EAAuDJ,QAAvD;AACAE,IAAAA,cAAc,CAACC,OAAf,CAAuBV,qBAAqB,CAACY,eAA7C,EACIZ,qBAAqB,CAACC,2BAAtB,CAAkDM,QAAlD,EAA2DC,QAA3D,CADJ;AAEH;;AAEqB,SAAfK,eAAe,GAAE;AACpBJ,IAAAA,cAAc,CAACK,UAAf,CAA0Bd,qBAAqB,CAACW,SAAhD;AACH;;AAEgB,SAAVI,UAAU,GAAE;AACf,QAAIC,YAAY,GAAGP,cAAc,CAACQ,OAAf,CAAuBjB,qBAAqB,CAACW,SAA7C,CAAnB;AACA,QAAGK,YAAY,IAAI,IAAnB,EAA0B,OAAO,KAAP;AAC1B,WAAO,IAAP;AACH;;AAEyB,SAAnBE,mBAAmB,GAAE;AACxB,QAAIF,YAAY,GAAGP,cAAc,CAACQ,OAAf,CAAuBjB,qBAAqB,CAACW,SAA7C,CAAnB;AACA,WAAOK,YAAP;AACH;;AAE2C,SAArCG,qCAAqC,GAAE;AAC1C,QAAIC,KAAK,GAAGX,cAAc,CAACQ,OAAf,CAAuBjB,qBAAqB,CAACY,eAA7C,CAAZ;AACA,WAAOQ,KAAP;AACH;;AAhCqC;AAArBpB,qB,CACVW,S,GAAY,mB;AADFX,qB,CAEVY,e,GAAkB,sB","sourcesContent":["export default class AuthenticationService{\r\n    static userLabel = 'authenticatedUser';\r\n    static authHeaderLabel = 'authenticationHeader'\r\n    \r\n    static getBasicAuthenticationToken(username, password){\r\n        return \"Basic \" + window.btoa(username + ':' + password);\r\n    }\r\n\r\n    static registerSuccesfulLogin(userName,passWord){\r\n        sessionStorage.setItem(AuthenticationService.userLabel,userName);\r\n        sessionStorage.setItem(AuthenticationService.authHeaderLabel,\r\n            AuthenticationService.getBasicAuthenticationToken(userName,passWord));\r\n    }\r\n\r\n    static unregisterLogin(){\r\n        sessionStorage.removeItem(AuthenticationService.userLabel);\r\n    }\r\n\r\n    static isLoggedIn(){\r\n        let loggedInUser = sessionStorage.getItem(AuthenticationService.userLabel);\r\n        if(loggedInUser == null)  return false;\r\n        return true;\r\n    }\r\n\r\n    static getLoggedInUserName(){\r\n        let loggedInUser = sessionStorage.getItem(AuthenticationService.userLabel);\r\n        return loggedInUser;\r\n    }\r\n\r\n    static getRegisteredBasicAuthenticationToken(){\r\n        let token = sessionStorage.getItem(AuthenticationService.authHeaderLabel);\r\n        return token;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}