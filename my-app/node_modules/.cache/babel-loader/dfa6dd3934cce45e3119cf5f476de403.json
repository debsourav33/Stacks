{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sourav.deb\\\\Stacks\\\\my-app\\\\src\\\\components\\\\heapoverflow\\\\QuestionFeedComponent.js\";\nimport React, { Component } from \"react\";\nimport '../shared/login';\nimport '../../common.css';\nimport TodoDataService from \"../../api/todo/TodoDataService\";\nimport AuthenticationService from \"../shared/AuthenticationService\";\nimport HeapOverFlowService from \"../../api/heapoverflow/HeapOverFlowService\";\nimport QuestionComponent from \"./QuestionComponent\";\nimport \"./Question.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionFeedComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: []\n    };\n    this.onQuestionDeleteClicked = this.onQuestionDeleteClicked.bind(this);\n  }\n\n  componentDidMount() {\n    let promise = new HeapOverFlowService().retrieveAllQuestions();\n    promise.then(response => {\n      let questionList = response.data.map(question => {\n        //console.log(todo);\n        return {\n          id: question.id,\n          title: question.title,\n          description: question.description\n        };\n      });\n      console.log(\"Mapped Question From Response\");\n      this.setState({\n        questions: questionList\n      });\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-feed\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.retrieveMessageFromBackend,\n        children: \"Poke Backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), this.questionsToHtmlListItems(this.state.questions)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  retrieveMessageFromBackend() {\n    //let promise = new HelloWorldService().executeHelloWorldPathVariableService(\"Ana\");\n    let promise = new HeapOverFlowService().retrieveAllQuestions();\n    promise.then(response => console.log(response.data)).catch(error => console.log(error));\n    console.log(\"**Retrieve Message From Backend**\");\n  }\n\n  questionsToHtmlListItems(questions) {\n    let ret = [];\n\n    for (let i = 0; i < questions.length; i++) {\n      let question = questions[i]; //ret.push(<li key={question.id} className=\"list-group-item\"> <QuestionComponent question={question}>/></li>);\n\n      ret.push( /*#__PURE__*/_jsxDEV(QuestionComponent, {\n        question: question,\n        onDeleteClicked: this.onQuestionDeleteClicked(question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 22\n      }, this));\n    } //console.log(ret);\n\n\n    return ret;\n  }\n\n  onQuestionDeleteClicked(question) {}\n\n}\n\nexport default QuestionFeedComponent;","map":{"version":3,"sources":["C:/Users/sourav.deb/Stacks/my-app/src/components/heapoverflow/QuestionFeedComponent.js"],"names":["React","Component","TodoDataService","AuthenticationService","HeapOverFlowService","QuestionComponent","QuestionFeedComponent","constructor","props","state","questions","onQuestionDeleteClicked","bind","componentDidMount","promise","retrieveAllQuestions","then","response","questionList","data","map","question","id","title","description","console","log","setState","render","retrieveMessageFromBackend","questionsToHtmlListItems","catch","error","ret","i","length","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,OAAO,kBAAP;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,qBAAN,SAAoCL,SAApC,CAA6C;AACzCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAb;AACA,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAA/B;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,OAAO,GAAG,IAAIV,mBAAJ,GAA0BW,oBAA1B,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAG;AACpB,UAAIC,YAAY,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,QAAQ,IAAI;AAC7C;AACA,eAAO;AAACC,UAAAA,EAAE,EAAED,QAAQ,CAACC,EAAd;AAAkBC,UAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAlC;AAAyCC,UAAAA,WAAW,EAAEH,QAAQ,CAACG;AAA/D,SAAP;AACH,OAHkB,CAAnB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,WAAKC,QAAL,CAAc;AAACjB,QAAAA,SAAS,EAAEQ;AAAZ,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACH,KARD;AASH;;AAEDmB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKC,0BAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGK,KAAKC,wBAAL,CAA8B,KAAKrB,KAAL,CAAWC,SAAzC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDmB,EAAAA,0BAA0B,GAAE;AACxB;AACA,QAAIf,OAAO,GAAG,IAAIV,mBAAJ,GAA0BW,oBAA1B,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIQ,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACE,IAArB,CAAzB,EACCY,KADD,CACOC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CADhB;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;;AAEDI,EAAAA,wBAAwB,CAACpB,SAAD,EAAW;AAC/B,QAAIuB,GAAG,GAAG,EAAV;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACxB,SAAS,CAACyB,MAAxB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,UAAIb,QAAQ,GAAGX,SAAS,CAACwB,CAAD,CAAxB,CAD+B,CAE/B;;AACAD,MAAAA,GAAG,CAACG,IAAJ,eAAS,QAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAEf,QAA7B;AAAuC,QAAA,eAAe,EAAE,KAAKV,uBAAL,CAA6BU,QAA7B;AAAxD;AAAA;AAAA;AAAA;AAAA,cAAT;AACH,KAN8B,CAO/B;;;AACA,WAAOY,GAAP;AACH;;AAEDtB,EAAAA,uBAAuB,CAACU,QAAD,EAAU,CAEhC;;AAnDwC;;AAsD7C,eAAef,qBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../shared/login'\r\nimport '../../common.css'\r\nimport TodoDataService from \"../../api/todo/TodoDataService\"\r\nimport AuthenticationService from \"../shared/AuthenticationService\"\r\nimport HeapOverFlowService from \"../../api/heapoverflow/HeapOverFlowService\";\r\nimport QuestionComponent from \"./QuestionComponent\";\r\nimport \"./Question.css\"\r\n\r\nclass QuestionFeedComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {questions:[]};\r\n        this.onQuestionDeleteClicked = this.onQuestionDeleteClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let promise = new HeapOverFlowService().retrieveAllQuestions();\r\n        promise.then(response =>{\r\n            let questionList = response.data.map(question => {\r\n                //console.log(todo);\r\n                return {id: question.id, title: question.title, description: question.description};                \r\n            });\r\n            console.log(\"Mapped Question From Response\");\r\n            this.setState({questions: questionList});\r\n            console.log(this.state);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"question-feed\">\r\n                <button className=\"btn btn-success\" onClick={this.retrieveMessageFromBackend}>Poke Backend</button>\r\n                \r\n                {this.questionsToHtmlListItems(this.state.questions)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    retrieveMessageFromBackend(){\r\n        //let promise = new HelloWorldService().executeHelloWorldPathVariableService(\"Ana\");\r\n        let promise = new HeapOverFlowService().retrieveAllQuestions();\r\n        promise.then(response => console.log(response.data))\r\n        .catch(error => console.log(error));\r\n        console.log(\"**Retrieve Message From Backend**\");\r\n    }\r\n\r\n    questionsToHtmlListItems(questions){\r\n        let ret = [];\r\n        for(let i=0;i<questions.length;i++){\r\n            let question = questions[i];\r\n            //ret.push(<li key={question.id} className=\"list-group-item\"> <QuestionComponent question={question}>/></li>);\r\n            ret.push(<QuestionComponent question={question} onDeleteClicked={this.onQuestionDeleteClicked(question)}/>);\r\n        }\r\n        //console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    onQuestionDeleteClicked(question){\r\n\r\n    }\r\n}\r\n\r\nexport default QuestionFeedComponent;"]},"metadata":{},"sourceType":"module"}