{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sourav.deb\\\\Stacks\\\\my-app\\\\src\\\\components\\\\todo\\\\Todo.js\";\nimport LoginComponent from \"./login\";\nimport React, { Component } from \"react\";\nimport './login.css';\nimport '../../common.css';\nimport { Link } from \"react-router-dom\";\nimport HelloWorldService from \"../../api/todo/HelloWorldService\";\nimport TodoDataService from \"../../api/todo/TodoDataService\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.generateTodos = this.generateTodos.bind(this);\n  }\n\n  componentDidMount() {\n    let promise = TodoDataService.retrieveAllTodos(AuthenticationService.getLoggedInUserName);\n    promise.then(response => {});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: this.retrieveMessageFromBackend,\n        children: \"Poke Backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: this.generateTodos()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  retrieveMessageFromBackend() {\n    //let promise = new HelloWorldService().executeHelloWorldPathVariableService(\"Ana\");\n    let promise = new TodoDataService().retrieveAllTodos(AuthenticationService.getLoggedInUserName);\n    promise.then(response => console.log(response.data)).catch(error => console.log(error));\n    console.log(\"**Retrieve Message From Backend**\");\n  }\n\n  generateTodos(todos) {\n    /*let todos =\r\n    [\r\n        {id: 0, task: 'Eat'},\r\n        {id: 1, task: 'Sleep'},\r\n        {id: 2, task: 'Code'},\r\n        {id: 3, task: 'Repeat'}\r\n    ];*/\n    //let ret = todos.map( todo => <li key={todo.id} className=\"list-group-item\"> {todo.task} </li>);\n    let ret = [];\n\n    for (let i = 0; i < todos.length; i++) {\n      let todo = todos[i];\n      ret.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\" \", todo.task, \" \"]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this));\n    } //console.log(ret);\n\n\n    return ret;\n  }\n\n  todosToHtmlListItems(todos) {}\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/sourav.deb/Stacks/my-app/src/components/todo/Todo.js"],"names":["LoginComponent","React","Component","Link","HelloWorldService","TodoDataService","AuthenticationService","Todo","constructor","props","state","todos","generateTodos","bind","componentDidMount","promise","retrieveAllTodos","getLoggedInUserName","then","response","render","retrieveMessageFromBackend","console","log","data","catch","error","ret","i","length","todo","push","task","id","todosToHtmlListItems"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,SAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAO,kBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA4B;AACxBM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,OAAO,GAAGV,eAAe,CAACW,gBAAhB,CAAiCV,qBAAqB,CAACW,mBAAvD,CAAd;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAaC,QAAQ,IAAG,CAEvB,CAFD;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKC,0BAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACK,KAAKT,aAAL;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAEDS,EAAAA,0BAA0B,GAAE;AACxB;AACA,QAAIN,OAAO,GAAG,IAAIV,eAAJ,GAAsBW,gBAAtB,CAAuCV,qBAAqB,CAACW,mBAA7D,CAAd;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAaC,QAAQ,IAAIG,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB,CAAzB,EACCC,KADD,CACOC,KAAK,IAAIJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CADhB;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;;AAEDX,EAAAA,aAAa,CAACD,KAAD,EAAO;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AAEQ;AACA,QAAIgB,GAAG,GAAG,EAAV;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACjB,KAAK,CAACkB,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC3B,UAAIE,IAAI,GAAGnB,KAAK,CAACiB,CAAD,CAAhB;AACAD,MAAAA,GAAG,CAACI,IAAJ,eAAS;AAAkB,QAAA,SAAS,EAAC,iBAA5B;AAAA,wBAAgDD,IAAI,CAACE,IAArD;AAAA,SAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cAAT;AACH,KAde,CAehB;;;AACA,WAAON,GAAP;AACH;;AAEDO,EAAAA,oBAAoB,CAACvB,KAAD,EAAO,CAE1B;;AAtDuB;;AAyD5B,eAAeJ,IAAf","sourcesContent":["import LoginComponent from \"./login\";\r\nimport React, { Component } from \"react\";\r\nimport './login.css'\r\nimport '../../common.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport HelloWorldService from \"../../api/todo/HelloWorldService\";\r\nimport TodoDataService from \"../../api/todo/TodoDataService\"\r\nimport AuthenticationService from \"./AuthenticationService\"\r\n\r\nclass Todo extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {todos:[]}\r\n        this.generateTodos = this.generateTodos.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let promise = TodoDataService.retrieveAllTodos(AuthenticationService.getLoggedInUserName);\r\n        promise.then(response =>{\r\n            \r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"todo\">\r\n                <button className=\"btn btn-warning\" onClick={this.retrieveMessageFromBackend}>Poke Backend</button>\r\n                <ul className=\"list-group\">\r\n                    {this.generateTodos()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    retrieveMessageFromBackend(){\r\n        //let promise = new HelloWorldService().executeHelloWorldPathVariableService(\"Ana\");\r\n        let promise = new TodoDataService().retrieveAllTodos(AuthenticationService.getLoggedInUserName);\r\n        promise.then(response => console.log(response.data))\r\n        .catch(error => console.log(error));\r\n        console.log(\"**Retrieve Message From Backend**\");\r\n    }\r\n\r\n    generateTodos(todos){\r\n        /*let todos =\r\n        [\r\n            {id: 0, task: 'Eat'},\r\n            {id: 1, task: 'Sleep'},\r\n            {id: 2, task: 'Code'},\r\n            {id: 3, task: 'Repeat'}\r\n        ];*/\r\n\r\n        //let ret = todos.map( todo => <li key={todo.id} className=\"list-group-item\"> {todo.task} </li>);\r\n        let ret = [];\r\n        for(let i=0;i<todos.length;i++){\r\n            let todo = todos[i];\r\n            ret.push(<li key={todo.id} className=\"list-group-item\"> {todo.task} </li>);\r\n        }\r\n        //console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    todosToHtmlListItems(todos){\r\n\r\n    }\r\n}\r\n\r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}