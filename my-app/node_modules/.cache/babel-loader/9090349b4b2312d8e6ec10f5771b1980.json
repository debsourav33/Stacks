{"ast":null,"code":"class Animal {\n  constructor() {\n    this.BroadName = \"Scary Animal\";\n    this.alive = true;\n  }\n\n  eat() {\n    console.log(`${this.BroadName} is eating`);\n  }\n\n}\n\nclass Tiger extends Animal {\n  constructor() {\n    super(...arguments);\n    this.genreName = \"Tiger\";\n  }\n\n  eat() {\n    let self = this;\n    let eatingHabit = \"meat\";\n    console.log(`A ${this.BroadName} named ${this.genreName} is eating`);\n\n    function sound() {\n      function yums() {\n        console.log(`${self.genreName} eating ${eatingHabit} yum yum`);\n      }\n\n      function yakk() {\n        console.log(`${self.genreName} eating ${eatingHabit} yaak`);\n      }\n\n      yums();\n    }\n\n    sound();\n  }\n\n  changeName(name) {\n    this.genreName = name;\n  }\n\n}\n\nexport default class Main {\n  constructor() {\n    this.name = \"main\";\n\n    this.fun = function () {\n      let box = \"square\";\n\n      let ins = function () {\n        console.log(this.box);\n      }; //ins() //this = undefined\n\n\n      console.log(this);\n      ins.bind(this)(); //this = main instance\n    };\n  }\n\n  nestedFuncExp() {\n    function f(x) {\n      function run(val) {\n        return val * x;\n      }\n\n      return run;\n    } //let mydoubler = new f(2);\n\n\n    let mydoubler = f(2); //same as new f(2)\n\n    console.log(mydoubler);\n    console.log(mydoubler(5));\n  }\n\n  constructorFuncExp() {\n    function Car() {\n      this.hello = function hello() {\n        console.log(\"hello \" + this.color);\n      };\n    }\n\n    let car1 = new Car();\n    let car2 = new Car();\n    console.log(car1);\n    console.log(car1.color); // undefined\n\n    Car.prototype.color = 'original color';\n    console.log(car1.color); // 'original color'\n\n    car1.hello();\n    car1.color = 'black';\n    console.log(car1.color); // 'black'\n\n    console.log(Object.getPrototypeOf(car1).color); // 'original color'\n\n    console.log(Object.getPrototypeOf(car2).color); // 'original color'\n\n    console.log(car1.color); // 'black'\n\n    console.log(car2.color); // 'original color'\n  }\n\n  run() {\n    //this.fun();\n    //let ins = new this.fun();\n    //ins();\n    this.constructorFuncExp(); //this.nestedFuncExp();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sourav.deb/Stacks/my-app/src/js_module/Main.js"],"names":["Animal","constructor","BroadName","alive","eat","console","log","Tiger","genreName","self","eatingHabit","sound","yums","yakk","changeName","name","Main","fun","box","ins","bind","nestedFuncExp","f","x","run","val","mydoubler","constructorFuncExp","Car","hello","color","car1","car2","prototype","Object","getPrototypeOf"],"mappings":"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","sourcesContent":["class Animal{\r\n    BroadName = \"Scary Animal\"\r\n    alive = true;\r\n\r\n    constructor (){\r\n    }\r\n\r\n    eat(){\r\n        console.log(`${this.BroadName} is eating`)\r\n    }\r\n}\r\n\r\nclass Tiger extends Animal{\r\n    genreName = \"Tiger\";\r\n\r\n    eat(){\r\n        let self = this;\r\n        let eatingHabit = \"meat\"\r\n        console.log(`A ${this.BroadName} named ${this.genreName} is eating`);\r\n        \r\n        function sound(){\r\n            function yums(){\r\n                console.log(`${self.genreName} eating ${eatingHabit} yum yum`);\r\n            }\r\n\r\n            function yakk(){\r\n                console.log(`${self.genreName} eating ${eatingHabit} yaak`);\r\n            }\r\n\r\n            yums();\r\n        } \r\n\r\n        sound();\r\n    }\r\n\r\n    changeName(name){\r\n        this.genreName = name;\r\n    }\r\n}\r\n\r\nexport default class Main{\r\n    /*\r\n    const anim = new Tiger();\r\n    console.log(anim);\r\n    anim.eat();\r\n\r\n    anim.changeName(\"Scary Tiger\");\r\n    anim.eat();\r\n    */\r\n    name = \"main\";\r\n\r\n    fun = function(){\r\n        let box = \"square\";\r\n\r\n        let ins = function(){\r\n            console.log(this.box);\r\n        }\r\n\r\n        //ins() //this = undefined\r\n        console.log(this);\r\n        ins.bind(this)(); //this = main instance\r\n    }\r\n    \r\n    nestedFuncExp(){\r\n        function f(x){\r\n            function run(val){\r\n                return val * x;\r\n            }\r\n\r\n            return run;\r\n        }\r\n\r\n        //let mydoubler = new f(2);\r\n        let mydoubler = f(2); //same as new f(2)\r\n        console.log(mydoubler);\r\n        console.log(mydoubler(5));\r\n    }\r\n\r\n    constructorFuncExp(){\r\n        function Car() {\r\n            this.hello = function hello(){\r\n                console.log(\"hello \" + this.color);\r\n            }\r\n        }\r\n\r\n        \r\n        let car1 = new Car();\r\n        let car2 = new Car();\r\n        \r\n        console.log(car1);\r\n        console.log(car1.color);    // undefined\r\n        \r\n\r\n        Car.prototype.color = 'original color';\r\n        console.log(car1.color);    // 'original color'\r\n        car1.hello();\r\n\r\n        car1.color = 'black';\r\n        console.log(car1.color);    // 'black'\r\n\r\n        console.log(Object.getPrototypeOf(car1).color); // 'original color'\r\n        console.log(Object.getPrototypeOf(car2).color); // 'original color'\r\n        console.log(car1.color);   // 'black'\r\n        console.log(car2.color);   // 'original color'\r\n    }\r\n    run(){\r\n        //this.fun();\r\n        //let ins = new this.fun();\r\n        //ins();\r\n\r\n        this.constructorFuncExp();\r\n        //this.nestedFuncExp();\r\n        \r\n    }\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}