{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:\\\\Users\\\\sourav.deb\\\\Stacks\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:\\\\Users\\\\sourav.deb\\\\Stacks\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classPrivateFieldLooseKey.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\sourav.deb\\\\Stacks\\\\my-app\\\\src\\\\components\\\\shared\\\\login.js\";\nimport React, { Component } from \"react\";\nimport HeapOverFlowService from \"../../api/heapoverflow/HeapOverFlowService\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _userNameAttr = /*#__PURE__*/_classPrivateFieldLooseKey(\"userNameAttr\");\n\nvar _passwordAttr = /*#__PURE__*/_classPrivateFieldLooseKey(\"passwordAttr\");\n\nvar _userDict = /*#__PURE__*/_classPrivateFieldLooseKey(\"userDict\");\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    Object.defineProperty(this, _userNameAttr, {\n      writable: true,\n      value: 'username'\n    });\n    Object.defineProperty(this, _passwordAttr, {\n      writable: true,\n      value: 'password'\n    });\n    Object.defineProperty(this, _userDict, {\n      writable: true,\n      value: {}\n    });\n    this.state = {\n      [_classPrivateFieldLooseBase(this, _userNameAttr)[_userNameAttr]]: '',\n      [_classPrivateFieldLooseBase(this, _passwordAttr)[_passwordAttr]]: ''\n    };\n    this.onInputChange = this.onInputChange.bind(this);\n    this.attemptLogin = this.attemptLogin.bind(this);\n    _classPrivateFieldLooseBase(this, _userDict)[_userDict][\"deb33\"] = \"admin123\";\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  }\n\n  onInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value //[username] : asd , [password]: 123\n\n    });\n  }\n\n  attemptLogin() {\n    //if(this.#userDict[this.state.username] = this.state.password){\n    let result = new HeapOverFlowService().authenticate(this.state[_classPrivateFieldLooseBase(this, _userNameAttr)[_userNameAttr]], this.state[_classPrivateFieldLooseBase(this, _passwordAttr)[_passwordAttr]]);\n    let promise = result[0];\n    let callback = result[1];\n    promise.then(response => {\n      console.log(\"Login Succesful\");\n      console.log(response);\n      AuthenticationService.registerSuccesfulLogin(this.state[_classPrivateFieldLooseBase(this, _userNameAttr)[_userNameAttr]], this.state[_classPrivateFieldLooseBase(this, _passwordAttr)[_passwordAttr]]);\n      callback(); //console.log(this.props.history);            \n    }).catch(error => {\n      console.log(\"Wrong UserName/Password\");\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Please Login With a Valid Credential \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"UserName \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: _classPrivateFieldLooseBase(this, _userNameAttr)[_userNameAttr],\n          onChange: this.onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this), \"Password \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: _classPrivateFieldLooseBase(this, _passwordAttr)[_passwordAttr],\n          onChange: this.onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success\",\n          style: {\n            margin: '10px'\n          },\n          onClick: this.attemptLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:/Users/sourav.deb/Stacks/my-app/src/components/shared/login.js"],"names":["React","Component","HeapOverFlowService","AuthenticationService","useNavigate","LoginComponent","constructor","props","state","onInputChange","bind","attemptLogin","shouldComponentUpdate","nextProps","nextState","event","setState","target","name","value","result","authenticate","promise","callback","then","response","console","log","registerSuccesfulLogin","catch","error","render","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport HeapOverFlowService from \"../../api/heapoverflow/HeapOverFlowService\";\r\nimport AuthenticationService from \"./AuthenticationService\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nclass LoginComponent extends Component{\r\n    #userNameAttr = 'username'\r\n    #passwordAttr = 'password'\r\n    #userDict = {}\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {[this.#userNameAttr]:'', [this.#passwordAttr]:''};\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.attemptLogin = this.attemptLogin.bind(this);\r\n\r\n        this.#userDict[\"deb33\"] = \"admin123\";\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return false;\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.setState({\r\n            [event.target.name] : event.target.value //[username] : asd , [password]: 123\r\n        });\r\n    }\r\n\r\n    attemptLogin(){\r\n        //if(this.#userDict[this.state.username] = this.state.password){\r\n\r\n        let result = new HeapOverFlowService().authenticate(this.state[this.#userNameAttr], this.state[this.#passwordAttr]);\r\n        let promise = result[0];\r\n        let callback = result[1];\r\n        promise.then(response => {\r\n            console.log(\"Login Succesful\");\r\n            console.log(response)\r\n            \r\n            AuthenticationService.registerSuccesfulLogin(this.state[this.#userNameAttr], this.state[this.#passwordAttr]);\r\n            callback()\r\n            \r\n            //console.log(this.props.history);            \r\n        }).catch(error => {\r\n            console.log(\"Wrong UserName/Password\");\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login\">\r\n                <div> Please Login With a Valid Credential </div>\r\n                <div>\r\n                UserName <input type=\"text\" name ={this.#userNameAttr} onChange={this.onInputChange}/>\r\n                Password <input type=\"password\" name ={this.#passwordAttr} onChange={this.onInputChange}/>\r\n                <button type=\"submit\" className=\"btn btn-success\" style={{margin: '10px'}} onClick={this.attemptLogin}>Login</button>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}