{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sourav.deb\\\\Stacks\\\\my-app\\\\src\\\\components\\\\heapoverflow\\\\QuestionFeedComponent.js\";\nimport React, { Component } from \"react\";\nimport '../shared/login';\nimport '../../common.css';\nimport TodoDataService from \"../../api/todo/TodoDataService\";\nimport AuthenticationService from \"../shared/AuthenticationService\";\nimport HeapOverFlowService from \"../../api/heapoverflow/HeapOverFlowService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionFeedComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: []\n    };\n  }\n\n  componentDidMount() {\n    let promise = new HeapOverFlowService().retrieveAllQuestions();\n    promise.then(response => {\n      let questionList = response.data.map(question => {\n        //console.log(todo);\n        return {\n          id: question.id,\n          title: question.title\n        };\n      });\n      console.log(\"Mapped Question From Response\");\n      this.setState({\n        questions: questionList\n      });\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: this.retrieveMessageFromBackend,\n        children: \"Poke Backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: this.questionsToHtmlListItems(this.state.questions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  retrieveMessageFromBackend() {\n    //let promise = new HelloWorldService().executeHelloWorldPathVariableService(\"Ana\");\n    let promise = new HeapOverFlowService().retrieveAllQuestions();\n    promise.then(response => console.log(response.data)).catch(error => console.log(error));\n    console.log(\"**Retrieve Message From Backend**\");\n  }\n\n  questionsToHtmlListItems(questions) {\n    let ret = [];\n\n    for (let i = 0; i < questions.length; i++) {\n      let question = questions[i];\n      ret.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\" \", question.title, \" \"]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this));\n    } //console.log(ret);\n\n\n    return ret;\n  }\n\n}\n\nexport default QuestionFeedComponent;","map":{"version":3,"sources":["C:/Users/sourav.deb/Stacks/my-app/src/components/heapoverflow/QuestionFeedComponent.js"],"names":["React","Component","TodoDataService","AuthenticationService","HeapOverFlowService","QuestionFeedComponent","constructor","props","state","questions","componentDidMount","promise","retrieveAllQuestions","then","response","questionList","data","map","question","id","title","console","log","setState","render","retrieveMessageFromBackend","questionsToHtmlListItems","catch","error","ret","i","length","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,OAAO,kBAAP;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;;;AAEA,MAAMC,qBAAN,SAAoCJ,SAApC,CAA6C;AACzCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,OAAO,GAAG,IAAIP,mBAAJ,GAA0BQ,oBAA1B,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAG;AACpB,UAAIC,YAAY,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,QAAQ,IAAI;AAC7C;AACA,eAAO;AAACC,UAAAA,EAAE,EAAED,QAAQ,CAACC,EAAd;AAAkBC,UAAAA,KAAK,EAAEF,QAAQ,CAACE;AAAlC,SAAP;AACH,OAHkB,CAAnB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,WAAKC,QAAL,CAAc;AAACd,QAAAA,SAAS,EAAEM;AAAZ,OAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACH,KARD;AASH;;AAEDgB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKC,0BAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACK,KAAKC,wBAAL,CAA8B,KAAKlB,KAAL,CAAWC,SAAzC;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAEDgB,EAAAA,0BAA0B,GAAE;AACxB;AACA,QAAId,OAAO,GAAG,IAAIP,mBAAJ,GAA0BQ,oBAA1B,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIO,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACE,IAArB,CAAzB,EACCW,KADD,CACOC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CADhB;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;;AAEDI,EAAAA,wBAAwB,CAACjB,SAAD,EAAW;AAC/B,QAAIoB,GAAG,GAAG,EAAV;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACrB,SAAS,CAACsB,MAAxB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B,UAAIZ,QAAQ,GAAGT,SAAS,CAACqB,CAAD,CAAxB;AACAD,MAAAA,GAAG,CAACG,IAAJ,eAAS;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA,wBAAoDd,QAAQ,CAACE,KAA7D;AAAA,SAASF,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,cAAT;AACH,KAL8B,CAM/B;;;AACA,WAAOU,GAAP;AACH;;AA9CwC;;AAiD7C,eAAexB,qBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../shared/login'\r\nimport '../../common.css'\r\nimport TodoDataService from \"../../api/todo/TodoDataService\"\r\nimport AuthenticationService from \"../shared/AuthenticationService\"\r\nimport HeapOverFlowService from \"../../api/heapoverflow/HeapOverFlowService\";\r\n\r\nclass QuestionFeedComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {questions:[]};\r\n    }\r\n\r\n    componentDidMount(){\r\n        let promise = new HeapOverFlowService().retrieveAllQuestions();\r\n        promise.then(response =>{\r\n            let questionList = response.data.map(question => {\r\n                //console.log(todo);\r\n                return {id: question.id, title: question.title};                \r\n            });\r\n            console.log(\"Mapped Question From Response\");\r\n            this.setState({questions: questionList});\r\n            console.log(this.state);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"todo\">\r\n                <button className=\"btn btn-warning\" onClick={this.retrieveMessageFromBackend}>Poke Backend</button>\r\n                <ul className=\"list-group\">\r\n                    {this.questionsToHtmlListItems(this.state.questions)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    retrieveMessageFromBackend(){\r\n        //let promise = new HelloWorldService().executeHelloWorldPathVariableService(\"Ana\");\r\n        let promise = new HeapOverFlowService().retrieveAllQuestions();\r\n        promise.then(response => console.log(response.data))\r\n        .catch(error => console.log(error));\r\n        console.log(\"**Retrieve Message From Backend**\");\r\n    }\r\n\r\n    questionsToHtmlListItems(questions){\r\n        let ret = [];\r\n        for(let i=0;i<questions.length;i++){\r\n            let question = questions[i];\r\n            ret.push(<li key={question.id} className=\"list-group-item\"> {question.title} </li>);\r\n        }\r\n        //console.log(ret);\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default QuestionFeedComponent;"]},"metadata":{},"sourceType":"module"}